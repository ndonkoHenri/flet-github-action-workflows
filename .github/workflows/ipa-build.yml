name: IPA Build

on:
  # Runs on push to any of the below branches
  push:
    branches:
      - master
      - main
  # Runs on pull request events that target one of the below branches
  pull_request:
    branches:
      - master
      - main

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.0

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Flet Build IPA
      run: |
        flutter config --no-analytics
        flet build ipa --verbose --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4.3.4  # https://github.com/marketplace/actions/upload-a-build-artifact
      with:
        name: ipa-flet  # the name of the artifact
        path: build/ipa  # location of Flet build output
        if-no-files-found: error  # Fail the action with an error message if no files are found
        overwrite: false  # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} #GitHub Token
        with:
          tag_name: v${{ env.BUILD_VERSION }}
          release_name: Release v${{ env.BUILD_VERSION }}
          draft: false
          prerelease: false

      - name: Zip Artifacts
        run: |
          cd artifacts
          echo "Initial directory structure:"
          ls -la
          echo "\nShowing ipa-flet contents:"
          ls -la ipa-flet/
          echo "\nShowing complete path structure:"
          find ipa-flet -type d
          mv ipa-flet/Runner.xcarchive/Products/Applications ipa-flet/Payload
          echo "\nDirectory structure after mv:"
          ls -la ipa-flet/
          cd ipa-flet
          zip -r ../ipa-flet.ipa Payload
          cd ..

      - name: List Workspace After Zipping
        run: |
          echo "Artifacts Directory After Zipping:"
          ls -la artifacts/

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ls -la artifacts/
            artifacts/ipa-flet.ipa
          tag_name: v${{ env.BUILD_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} #GitHub Token